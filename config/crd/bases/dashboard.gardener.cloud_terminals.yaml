
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: terminals.dashboard.gardener.cloud
spec:
  group: dashboard.gardener.cloud
  names:
    kind: Terminal
    listKind: TerminalList
    plural: terminals
    singular: terminal
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Terminal is the Schema for the terminals API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: TerminalSpec defines the desired state of Terminal
          properties:
            host:
              description: Host defines the desired state of the resources related
                to the host cluster
              properties:
                credentials:
                  description: ClusterCredentials define the credentials to the host
                    cluster
                  properties:
                    secretRef:
                      description: SecretRef is a reference to a secret that contains
                        the cluster specific credentials Either SecretRef or ServiceAccountRef
                        is mandatory. SecretRef will be used if both refs are provided.
                      properties:
                        name:
                          description: Name is unique within a namespace to reference
                            a secret resource.
                          type: string
                        namespace:
                          description: Namespace defines the space within which the
                            secret name must be unique.
                          type: string
                      type: object
                    serviceAccountRef:
                      description: ServiceAccountRef is a reference to a service account
                        that should be used, usually to manage resources on the same
                        cluster as the service account is residing in
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead
                            of an entire object, this string should contain a valid
                            JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container
                            within a pod, this would take on a value like: "spec.containers{name}"
                            (where "name" refers to the name of the container that
                            triggered the event) or if no container name is specified
                            "spec.containers[2]" (container with index 2 in this pod).
                            This syntax is chosen only to have some well-defined way
                            of referencing a part of an object. TODO: this design
                            is not final and this field is subject to change in the
                            future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference
                            is made, if any. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                  type: object
                namespace:
                  description: Namespace is the namespace where the pod resides in
                    This field should not be set if TemporaryNamespace is set to true
                  type: string
                pod:
                  description: Pod defines the desired state of the pod
                  properties:
                    container:
                      description: Container belonging to the pod. Cannot be updated.
                      properties:
                        args:
                          description: 'Arguments to the entrypoint. The docker image''s
                            CMD is used if this is not provided. Variable references
                            $(VAR_NAME) are expanded using the container''s environment.
                            If a variable cannot be resolved, the reference in the
                            input string will be unchanged. The $(VAR_NAME) syntax
                            can be escaped with a double $$, ie: $$(VAR_NAME). Escaped
                            references will never be expanded, regardless of whether
                            the variable exists or not. Cannot be updated. More info:
                            https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                          items:
                            type: string
                          type: array
                        image:
                          description: Image defines the image used for the container.
                          type: string
                        privileged:
                          description: Run container in privileged mode. Processes
                            in privileged containers are essentially equivalent to
                            root on the host. Defaults to false.
                          type: boolean
                        resources:
                          description: 'Compute Resources required by this container.
                            Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                          properties:
                            limits:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Limits describes the maximum amount of
                                compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Requests describes the minimum amount
                                of compute resources required. If Requests is omitted
                                for a container, it defaults to Limits if that is
                                explicitly specified, otherwise to an implementation-defined
                                value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                              type: object
                          type: object
                      required:
                      - image
                      type: object
                    containerImage:
                      description: 'ContainerImage defines the image used for the
                        container. ContainerImage is ignored if Container is set.
                        Deprecated: Use `Container.Image` instead.'
                      type: string
                    hostNetwork:
                      description: Host networking requested for this pod. Use the
                        host's network namespace. Default to false.
                      type: boolean
                    hostPID:
                      description: Use the host's pid namespace. Default to false.
                      type: boolean
                    labels:
                      additionalProperties:
                        type: string
                      description: Map of string keys and values that can be used
                        to organize and categorize (scope and select) objects. Will
                        be set as labels of the pod
                      type: object
                    nodeSelector:
                      additionalProperties:
                        type: string
                      description: NodeSelector is a selector which must be true for
                        the pod to fit on a node. Selector which must match a node's
                        labels for the pod to be scheduled on that node.
                      type: object
                    privileged:
                      description: 'Run container in privileged mode. Privileged is
                        ignored if Container is set. Processes in privileged containers
                        are essentially equivalent to root on the host. Defaults to
                        false. Deprecated: Use `Container.Privileged` instead.'
                      type: boolean
                  type: object
                temporaryNamespace:
                  description: TemporaryNamespace is a flag to indicate if the namespace
                    should be ephemeral. If true, the namespace will be created and
                    when the terminal is deleted, the namespace is also deleted. If
                    true, the mutating webhook makes sure that a temporary namespace
                    is set; in this case you cannot choose the namespace This field
                    should be false if Namespace is set. You cannot define the name
                    of the temporary namespace.
                  type: boolean
              required:
              - credentials
              - pod
              type: object
            identifier:
              type: string
            target:
              description: TargetCluster defines the desired state of the resources
                related to the target cluster
              properties:
                bindingKind:
                  description: BindingKind defines the desired role binding. ClusterRoleBinding
                    will result in a ClusterRoleBinding. RoleBinding will result in
                    a RoleBinding.
                  enum:
                  - ClusterRoleBinding
                  - RoleBinding
                  type: string
                credentials:
                  description: ClusterCredentials define the credentials to the target
                    cluster
                  properties:
                    secretRef:
                      description: SecretRef is a reference to a secret that contains
                        the cluster specific credentials Either SecretRef or ServiceAccountRef
                        is mandatory. SecretRef will be used if both refs are provided.
                      properties:
                        name:
                          description: Name is unique within a namespace to reference
                            a secret resource.
                          type: string
                        namespace:
                          description: Namespace defines the space within which the
                            secret name must be unique.
                          type: string
                      type: object
                    serviceAccountRef:
                      description: ServiceAccountRef is a reference to a service account
                        that should be used, usually to manage resources on the same
                        cluster as the service account is residing in
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead
                            of an entire object, this string should contain a valid
                            JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container
                            within a pod, this would take on a value like: "spec.containers{name}"
                            (where "name" refers to the name of the container that
                            triggered the event) or if no container name is specified
                            "spec.containers[2]" (container with index 2 in this pod).
                            This syntax is chosen only to have some well-defined way
                            of referencing a part of an object. TODO: this design
                            is not final and this field is subject to change in the
                            future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference
                            is made, if any. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                  type: object
                kubeconfigContextNamespace:
                  description: KubeconfigContextNamespace is a reference to the namespace
                    within the host cluster that should be used as default in the
                    kubeconfig context
                  type: string
                namespace:
                  description: Namespace is a reference to the namespace within the
                    target cluster in which the resources should be placed. This field
                    should not be set if TemporaryNamespace is set to true
                  type: string
                roleName:
                  description: RoleName is the name of the ClusterRole the "access"
                    service account is bound to.
                  type: string
                temporaryNamespace:
                  description: TemporaryNamespace is a flag to indicate if the namespace
                    should be ephemeral. If true, the namespace will be created and
                    when the terminal is deleted, the namespace is also deleted. If
                    true, the mutating webhook makes sure that a temporary namespace
                    is set; in this case you cannot choose the namespace This field
                    should be false if Namespace is set. You cannot define the name
                    of the temporary namespace.
                  type: boolean
              required:
              - bindingKind
              - credentials
              - kubeconfigContextNamespace
              - roleName
              type: object
          required:
          - host
          - identifier
          - target
          type: object
        status:
          description: TerminalStatus defines the observed state of Terminal
          properties:
            attachServiceAccountName:
              description: AttachServiceAccountName is the name of service account
                on the host cluster
              type: string
            podName:
              description: PodName is the name of the pod on the host cluster
              type: string
          required:
          - attachServiceAccountName
          - podName
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
